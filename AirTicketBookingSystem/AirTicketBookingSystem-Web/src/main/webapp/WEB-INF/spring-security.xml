<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- enable use-expressions -->
    <http auto-config="true" use-expressions="true" xmlns="http://www.springframework.org/schema/security">
        
        <!-- grant access to unsecured resources to unauthenticated users -->
        <intercept-url pattern="/rest/login*" access="permitAll" />
        <intercept-url pattern="/rest/403*" access="permitAll" />
        <intercept-url pattern="/js/**" access="permitAll" />
        <intercept-url pattern="/css/**" access="permitAll" />
        <intercept-url pattern="/fonts/**" access="permitAll" />
        <intercept-url pattern="/resources/**" access="permitAll" />        
        <intercept-url pattern="/**" access="permitAll" />

        
        <!-- grant access to authenticated users -->
        
        <!--by default, deny access to all resources to all users who were not specified above. -->	
        <!--<intercept-url pattern="/**" access="denyAll" />-->
         
        <!-- access denied page -->
        <access-denied-handler error-page="/rest/403" />
        
        <!-- login form -->
        <form-login 
            login-page="/rest/login" 
            default-target-url="/" 
            authentication-failure-url="/rest/login?error" 
            username-parameter="username"
            password-parameter="password" />
        <logout logout-success-url="/rest/login?logout"  />
    </http>
	
    <!-- Select users and user_roles from database -->
    <authentication-manager>
        <authentication-provider>
            		    <password-encoder ref="encoder" />

            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query=
					"select nick, password, enabled from user_acount where nick=?"
                               authorities-by-username-query=
					"select nick, role from UserRole ur join user_acount u on (ur.USER_ID = u.ID) where nick=?" />
        </authentication-provider>
    </authentication-manager>
    
    <beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="10" />
	</beans:bean>

</beans:beans>